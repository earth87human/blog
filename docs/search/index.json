[{"content":"I am a full stack PHP engineer. Experience 2020 - 2021 PHP engineer at 接案公司 2022 - 2023 PHP engineer / SRE engineer at Gomaji 夠麻吉股份有限公司 Skills JS PHP DB Nginx Docker K8s Cloud Network CI/CD Other jQuery React Async EventLoop Ajax CI Laravel MySQL Redis Server Loadbalance TLS/SSL Proxy dockerfile compose secret deploy service ingress role GCP AWS CCNA switch router TCP/IP drone git Linux Certifications Cloud GCP AWS Network CCNA Kubernetes CKA Language TOEIC 950 JLPT N1 External Links Check out my GitHub account : GitHub\nCheck out my LinkedIn account : LinkedIn\n","date":"2023-01-01T00:00:00Z","image":"https://earth87human.github.io/blog/p/about-me/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://earth87human.github.io/blog/p/about-me/","title":"About Me"},{"content":"YouTube video ","date":"2023-06-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/%E5%91%8A%E7%99%BD%E6%B0%A3%E7%90%83/","title":"吉他練習-告白氣球"},{"content":"三種 inter VLAN routing 的方法 : 1 . 每個 VLAN 在 Switch / Router 上各自擁有獨立的物理街口，並設置成 Access Port。\n2 . Switch / Router 之間用 Trunk 連接 , 所有 VLAN 跑在同一條網線上。\n3 . 使用 Layer 3 Swtich , 設定 SVI 接口。\n","date":"2023-08-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/inter-vlan-routing/","title":"如何在 Cisco 裝置設定 inter VLAN routing"},{"content":"需求 : 在 Cisco Switch 裝置設定 VLAN , 減少 Broadcast Domain 的範圍。\nStep 1 : 建立模擬環境 開啟 Packet Tracer 建立模擬環境，如下圖\nStep 2 : 建立 VLAN 進入 Switch CLI 建立 VLAN , 兩台都要設定\n首先設置左邊那台 Switch0\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 關閉 dns lookup Switch(config)# no ip domain-lookup # 建立 VLAN 10 Switch(config)# vlan 10 # 設定 VLAN 10 名稱為 HR Switch(config-vlan)# name HR # 建立 VLAN 20 Switch(config-vlan)# vlan 20 # 設定 VLAN 20 名稱為 IT Switch(config-vlan)# name IT 設置右邊那台 Switch1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 關閉 dns lookup Switch(config)# no ip domain-lookup # 建立 VLAN 10 Switch(config)# vlan 10 # 設定 VLAN 10 名稱為 HR Switch(config-vlan)# name HR # 建立 VLAN 20 Switch(config-vlan)# vlan 20 # 設定 VLAN 20 名稱為 IT Switch(config-vlan)# name IT Step 3 : 驗證 VLAN 驗證 VLAN 是否建立成功\n1 2 # 在 config mode 要加 do Switch(config-vlan)# do show vlan brief Step 4 : 建立 access port 在連接終端設備的端口設置 accss port\n首先設置左邊那台 Switch0\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 選擇 fa0/1 端口 Switch(config)# interface fa0/1 # 將 fa0/1 端口設置成 access port Switch(config-if)# switchport mode access # 將 fa0/1 端口和 VLAN 10 綁定 Switch(config-if)# switchport access vlan 10 # 選擇 fa0/2 端口 Switch(config-if)# interface fa0/2 # 將 fa0/2 端口設置成 access port Switch(config-if)# switchport mode access # 將 fa0/2 端口和 VLAN 20 綁定 Switch(config-if)# switchport access vlan 20 設置右邊那台 Switch1\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 選擇 fa0/2 端口 Switch(config)# interface fa0/2 # 將 fa0/2 端口設置成 access port Switch(config-if)# switchport mode access # 將 fa0/2 端口和 VLAN 10 綁定 Switch(config-if)# switchport access vlan 10 # 選擇 fa0/3 端口 Switch(config-if)# interface fa0/3 # 將 fa0/3 端口設置成 access port Switch(config-if)# switchport mode access # 將 fa0/3 端口和 VLAN 20 綁定 Switch(config-if)# switchport access vlan 20 Step 5 : 驗證 access port 驗證 access port 是否建立成功\n1 2 # 在 config mode 要加 do Switch(config-if)# do show vlan brief Step 6 : 建立 trunk port 首先設置左邊那台 Switch0\n1 2 3 4 5 6 7 8 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 選擇 fa0/3 端口 Switch(config)# interface fa0/3 # 將 fa0/3 端口設置成 trunk port Switch(config-if)# switchport mode trunk 設置右邊那台 Switch1\n1 2 3 4 5 6 7 8 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 選擇 fa0/1 端口 Switch(config)# interface fa0/1 # 將 fa0/1 端口設置成 trunk port Switch(config-if)# switchport mode trunk Step 7 : 驗證 trunk port 驗證 trunk port 是否建立成功\n1 2 # 在 config mode 要加 do Switch(config-if)# do show interface trunk Step 8 : 驗證是否可以通訊 進入 Laptop0 (192.168.1.1/24) CLI ping 同一 VLAN 下的機器\n","date":"2023-07-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/setup-vlan/","title":"如何在 Cisco Switch 裝置設定 VLAN"},{"content":"Problem : Description Roman numerals are represented by seven different symbols : I , V , X , L , C , D and M.\nSymbol Value\nI 1\nV 5\nX 10\nL 50\nC 100\nD 500\nM 1000\nFor example , 2 is written as II in Roman numeral , just two ones added together . 12 is written as XII , which is simply X + II . The number 27 is written as XXVII , which is XX + V + II .\nRoman numerals are usually written largest to smallest from left to right . However, the numeral for four is not IIII . Instead , the number four is written as IV . Because the one is before the five we subtract it making four . The same principle applies to the number nine , which is written as IX . There are six instances where subtraction is used :\nI can be placed before V (5) and X (10) to make 4 and 9. X can be placed before L (50) and C (100) to make 40 and 90. C can be placed before D (500) and M (1000) to make 400 and 900. Given a roman numeral , convert it to an integer .\nExample 1 Input : s = \u0026ldquo;III\u0026rdquo;\nOutput : 3\nExplanation : III = 3\nExample 2 Input : s = \u0026ldquo;LVIII\u0026rdquo; Output : 58\nExplanation : L = 50 , V= 5 , III = 3\nExample 3 Input : s = \u0026ldquo;MCMXCIV\u0026rdquo;\nOutput : 1994 Explanation : M = 1000 , CM = 900 , XC = 90 and IV = 4\nConstraints 1 \u0026lt;= s.length \u0026lt;= 15 s contains only the characters (\u0026lsquo;I\u0026rsquo;, \u0026lsquo;V\u0026rsquo;, \u0026lsquo;X\u0026rsquo;, \u0026lsquo;L\u0026rsquo;, \u0026lsquo;C\u0026rsquo;, \u0026lsquo;D\u0026rsquo;, \u0026lsquo;M\u0026rsquo;). It is guaranteed that s is a valid roman numeral in the range [1, 3999]. Solution 1 : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public: int romanToInt(string s) { unordered_map\u0026lt;char, int\u0026gt; m; m[\u0026#39;I\u0026#39;] = 1; m[\u0026#39;V\u0026#39;] = 5; m[\u0026#39;X\u0026#39;] = 10; m[\u0026#39;L\u0026#39;] = 50; m[\u0026#39;C\u0026#39;] = 100; m[\u0026#39;D\u0026#39;] = 500; m[\u0026#39;M\u0026#39;] = 1000; int ans = 0; for(int i = 0; i \u0026lt; s.length(); i++){ if(m[s[i]] \u0026lt; m[s[i+1]]){ ans -= m[s[i]]; } else{ ans += m[s[i]]; } } return ans; } }; # 時間複雜度 Ｏ(n) # 空間複雜度 Ｏ(1) ","date":"2023-05-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/leetcode-13-roman-to-integer/","title":"Leetcode 13 Roman to Integer"},{"content":"Problem : Description Given an array of integers nums and an integer target , return indices of the two numbers such that they add up to target.\nYou may assume that each input would have exactly one solution , and you may not use the same element twice.\nYou can return the answer in any order.\nExample 1 Input : nums = [2,7,11,15] , target = 9\nOutput : [0,1]\nExplanation : Because nums[0] + nums[1] == 9, we return [0, 1].\nExample 2 Input : nums = [3,2,4] , target = 6\nOutput : [1,2]\nExample 3 Input : nums = [3,3] , target = 6\nOutput : [0,1]\nConstraints 2 \u0026lt;= nums.length \u0026lt;= 104 -109 \u0026lt;= nums[i] \u0026lt;= 109 -109 \u0026lt;= target \u0026lt;= 109 Only one valid answer exists. Solution 1 : Brute Force 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public: vector\u0026lt;int\u0026gt; twoSum(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { int n = nums.size(); for (int i = 0; i \u0026lt; n - 1; i++) { for (int j = i + 1; j \u0026lt; n; j++) { if (nums[i] + nums[j] == target) { return {i, j}; } } } return {}; // No solution found } }; # 時間複雜度 Ｏ(n^2) # 空間複雜度 Ｏ(1) Solution 2 : Two-pass Hash Table 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Solution { public: vector\u0026lt;int\u0026gt; twoSum(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { unordered_map\u0026lt;int, int\u0026gt; numMap; int n = nums.size(); // Build the hash table for (int i = 0; i \u0026lt; n; i++) { numMap[nums[i]] = i; } // Find the complement for (int i = 0; i \u0026lt; n; i++) { int complement = target - nums[i]; if (numMap.count(complement) \u0026amp;\u0026amp; numMap[complement] != i) { return {i, numMap[complement]}; } } return {}; // No solution found } }; # 時間複雜度 Ｏ(n) # 空間複雜度 Ｏ(n) Solution 3 : One-pass Hash Table 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Solution { public: vector\u0026lt;int\u0026gt; twoSum(vector\u0026lt;int\u0026gt;\u0026amp; nums, int target) { unordered_map\u0026lt;int, int\u0026gt; numMap; int n = nums.size(); for (int i = 0; i \u0026lt; n; i++) { int complement = target - nums[i]; if (numMap.count(complement)) { return {numMap[complement], i}; } numMap[nums[i]] = i; } return {}; // No solution found } }; # 時間複雜度 Ｏ(n) # 空間複雜度 Ｏ(n) 大功告成～ ","date":"2023-04-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/leetcode-1-two-sum/","title":"Leetcode 1 Two Sum"},{"content":"需求 : 使用同一台主機登入兩個以上不同GitHub帳號像是(公司帳號 + 個人帳號)。\n解決方法 : 由於 Github 不允許不同帳號使用同一個 public key，\n需用 ssh-keygen 產兩組非對稱加密金鑰，\n並設置 ssh config 檔，指定ssh連線時所使用的金鑰。\nStep 1 : 產兩組非對稱加密金鑰 1 2 3 4 5 6 # 到家目錄底下 .ssh 資料夾 cd ~/.ssh # 使用 ssh-keygen 產生兩組非對稱加密金鑰 # 一組為 company(私鑰) / company.pub(公鑰) # 一組為 personal(私鑰) / personal.pub(公鑰) Step 2 : 將本機端公鑰存放至GitHub 1 2 3 4 5 cd ~/.ssh # 將 company.pub 放到公司的GitHub帳號 cat company.pub # 將 personal.pub 放到個人的GitHub帳號 cat personal.pub Step 3 : 設置 ssh config檔 1 2 3 4 5 6 7 8 9 10 11 12 # 到家目錄底下 .ssh 資料夾 cd ~/.ssh # 設定 ssh config 檔 vim config Host company # 自定義連線主機名(alias) Hostname github.com # 要連線的主機 Identityfile ~/.ssh/company # 存放私鑰的位置 Host personal # 自定義連線主機名(alias) Hostname github.com # 要連線的主機 Identityfile ~/.ssh/personal # 存放私鑰的位置 Step 4 : 測試 ssh 連線是否成功 1 2 3 4 5 # 測試公司Github帳號是否可以連線 ssh git@company # 測試個人Github帳號是否可以連線 ssh git@personal Step 5 : clone 專案 1 2 3 4 5 6 7 8 9 # clone 公司Github帳號專案 # 將原本 github.com 改成 ssh config 檔的 Host git clone git@company:公司Github帳號/專案名稱.git # clone 個人Github帳號專案 # 將原本 github.com 改成 ssh config 檔的 Host git clone git@personal:個人Github帳號/專案名稱.git 大功告成～ ","date":"2023-03-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/multiple-github-account/","title":"如何在本機使用多個GitHub帳號進行開發"},{"content":"需求 : 在 Cisco Switch 裝置設定 line console 登入密碼，防止不肖人士登入。\nStep 1 : 建立模擬環境 開啟 Packet Tracer 建立模擬環境，如下圖\nStep 2 : 設定密碼 打開 Switch CLI 設定密碼\n1 2 3 4 5 6 7 8 9 10 11 12 # 進入 privileged mode Switch\u0026gt; enable # 進入 config mode Switch# configure termianl # 關閉 dns lookup Switch(config)# no ip domain-lookup # 選擇 line console 0 , switch 只有一個 console port 故選擇 0 Switch(config)# line console 0 # 設定密碼 Switch(config-line)# password earth87human # 啟用密碼 Switch(config-line)# login Step 3 : 設定逾時自動登出 打開 Switch CLI 設定逾時自動登出\n1 2 # 設定逾時自動登出 Switch(config-line)# exec-time 02 30 設定逾時時間為2:30 Step 4 : 驗證 驗證 Laptop 是否可以用密碼登入 Switch\nStep 5 : 取消登入密碼 打開 Switch CLI 取消登入密碼\n1 2 3 # 取消登入密碼 Switch(Config)# line console 0 Switch(Config-line)# no password 大功告成～ ","date":"2023-02-01T00:00:00Z","permalink":"https://earth87human.github.io/blog/p/setup-line-console-password/","title":"如何在 Cisco Switch 裝置設定 line console 登入密碼"}]